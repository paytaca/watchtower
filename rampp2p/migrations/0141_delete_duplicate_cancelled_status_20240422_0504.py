# Generated by Django 3.0.14 on 2024-04-22 05:04

from django.db import migrations
from django.db.models import Count, Q
from rampp2p.models import StatusType

import logging
logger = logging.getLogger(__name__)

def delete_duplicate_cancelled_status(apps, schema_editor):
    Order = apps.get_model('rampp2p', 'Order')
    Status = apps.get_model('rampp2p', 'Status')
    orders = Order.objects.annotate(
        status_count=Count('status__order', filter=Q(status__status=StatusType.CANCELED))
    ).filter(status_count__gt=1)

    for order in orders:
        logger.warn(f'order #{order.id} | {order.status_count} cancelled status')
        cancelled_statuses = Status.objects.filter(Q(order=order.id) & Q(status=StatusType.CANCELED))
        for index, status in enumerate(cancelled_statuses):
            if index == 0:
                continue
            status.delete()
        cancelled_statuses = Status.objects.filter(Q(order=order.id) & Q (status=StatusType.CANCELED))
        logger.warn(f'order #{order.id} | {len(cancelled_statuses)} cancelled status')

class Migration(migrations.Migration):

    dependencies = [
        ('rampp2p', '0140_init_empty_order_expires_at_20240416_0258'),
    ]

    operations = [
        migrations.RunPython(delete_duplicate_cancelled_status)
    ]

