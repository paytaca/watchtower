# Generated by Django 3.0.14 on 2024-07-24 06:13

from django.db import migrations
from django.db.models import Count, OuterRef, Subquery
from rampp2p.models import StatusType
from django.utils import timezone

import logging
logger = logging.getLogger(__name__)

'''
Marks completed orders as already read by order members
'''
def read_auto_canceled_orders(apps, schema_editor):
    Order = apps.get_model('rampp2p', 'Order')
    Status = apps.get_model('rampp2p', 'Status')

    last_status = Status.objects.filter(
        order=OuterRef('pk'),
        status__in=[StatusType.CANCELED, StatusType.REFUNDED, StatusType.RELEASED]
    ).order_by('-created_at').values('order')[:1]

    orders = Order.objects.filter(pk__in=Subquery(last_status)).annotate(member_count=Count('members')).filter(member_count__gt=0)
    for order in orders:
        members = order.members.all()
        for member in members:
            member.read_at = timezone.now()
            member.save()
            logger.warn(f'Order #{order.id} read by {member.type} {member.arbiter.name if member.type == "ARBITER" else member.peer.name}')

class Migration(migrations.Migration):

    dependencies = [
        ('rampp2p', '0172_order_is_cash_in'),
    ]

    operations = [
        migrations.RunPython(read_auto_canceled_orders)
    ]
