# Generated by Django 3.0.14 on 2024-04-05 08:12

from django.db import migrations
from django.db.models import OuterRef, Subquery
from rampp2p.utils import generate_chat_session_ref
from rampp2p.models import StatusType

def update_chat_session_ref(apps, schema_editor):
    # update all ongoing orders chat_session_ref
    Order = apps.get_model('rampp2p', 'Order')
    Status = apps.get_model('rampp2p', 'Status')

    completed_status = [
        StatusType.CANCELED,
        StatusType.RELEASED,
        StatusType.REFUNDED
    ]
    last_status = Status.objects.filter(
        order=OuterRef('pk'),
        status__in=completed_status
    ).order_by('-created_at').values('order')[:1]
    ongoing_orders = Order.objects.exclude(pk__in=Subquery(last_status))
    for order in ongoing_orders:
        formatted_timestamp = order.created_at.strftime('%Y-%m-%dT%H:%M:%S.%fZ')
        chat_session_ref = generate_chat_session_ref(f'{order.id}{formatted_timestamp}')
        if not order.chat_session_ref or order.chat_session_ref != chat_session_ref:
            order.chat_session_ref = chat_session_ref
            order.save()

class Migration(migrations.Migration):

    dependencies = [
        ('rampp2p', '0136_order_chat_session_ref'),
    ]

    operations = [
        migrations.RunPython(update_chat_session_ref)
    ]
